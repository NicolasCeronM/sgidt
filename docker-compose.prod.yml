version: "3.9"
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: sgi_dt
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes: [pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d sgi_dt"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    volumes: [redisdata:/data]

  web:
    build: .
    env_file: .env.prod
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3
    ports: ["8000:8000"]
    depends_on: [db, redis]
    environment:
      OAUTHLIB_INSECURE_TRANSPORT: "1"

  worker:
    build: .
    env_file: .env.prod
    command: celery -A config worker -l info
    depends_on: [redis, web]

  beat:
    build: .
    env_file: .env.prod
    command: celery -A config beat -l info
    depends_on: [redis, web]

volumes:
  pgdata:
  redisdata:

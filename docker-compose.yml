version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: sgidt_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: sgidt
      POSTGRES_USER: sgidt_user
      POSTGRES_PASSWORD: admin123
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sgidt_user -d sgidt -h 127.0.0.1"]
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: sgidt_redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    ports:
      - "6379:6379"

  web:
    build: .
    container_name: sgidt_web
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      OAUTHLIB_INSECURE_TRANSPORT: "1"
      DJANGO_SETTINGS_MODULE: config.settings
      DB_NAME: sgidt
      DB_USER: sgidt_user
      DB_PASSWORD: admin123
      DB_HOST: db
      DB_PORT: "5432"
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      TESSERACT_LANG: spa+eng
      DEBUG: "1"
    volumes:
      - .:/app
      - media:/app/media
      - staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    command: >
      sh -c "
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      python manage.py runserver 0.0.0.0:8000
      "

  # üî• Un solo worker, escuchando 'correos' y 'celery'
  celery_worker:
    build: .
    container_name: sgidt_celery_worker
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_started
    environment:
      DJANGO_SETTINGS_MODULE: config.settings
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      TESSERACT_LANG: spa+eng
      CELERY_WORKER_CONCURRENCY: "1"
    volumes:
      - .:/app
      - media:/app/media
    command: celery -A config worker -l INFO -Q correos,celery

  # ‚è∞ Beat: dispara el schedule definido en config/celery.py
  celery_beat:
    build: .
    container_name: sgidt_celery_beat
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_started
    environment:
      DJANGO_SETTINGS_MODULE: config.settings
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    volumes:
      - .:/app
    command: celery -A config beat -l INFO
    # Si luego usas django-celery-beat:
    # command: celery -A config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db

volumes:
  pgdata:
  media:
  staticfiles:
